#+TITLE: SecureQ8 -- Tools for running secure quantized models

Small set of scripts that can be used to prep a model and input for evaluation
with [[https://github.com/data61/MP-SPDZ/][MP-SPDZ]].

The scripts require Google flatbuffers and the schema for ~.tflite~
models. Refer to ~build.sh~ for instructions/guide on how to install
these. Alternatively, running

: $ ./build.sh all

should do the trick on most systems.

The code works with all MobileNetV1 models, and compatible versions can be
downloaded [[https://www.tensorflow.org/lite/guide/hosted_models][here]].

The ~images~ folder contains a couple of example images that can be used as
inputs.

MP-SPDZ needs to be present in the directory of the same name. You can
either use a script to download the tested version:

: $ ./get-mp-spdz.sh

Or you can download the source and build it there:

: $ git submodule update --init MP-SPDZ
: $ cd MP-SPDZ; make -j8 tldr; make -j8

After setting everything up, you can use the main script to run the
computation:

: $ ./run.sh <model> <image> <protocol> [<trunc> [<n_threads]]

The options are as follows:
- =model= is one of =v1_{0.25,0.5,0.75,1.0}_{128,160,192,224}=. It
  will be input by party 0.
- =image= is the image to be classified. It will be input by party 1.
- =protocol= is one of semi2k, semi, ring, rep-field, spdz2k, cowgear,
  ps-rep-ring, ps-rep-field, in the same order as the columns in
  <https://eprint.iacr.org/2019/131>. See the MP-SPDZ readme for
  further explanations.
- =trunc= is one of 0 (probabilistic), 1 (special probabilistic), and
  2 (exact). Note that 1 only works with =ring=.
- =n_threads= is the number of threads per party.

For example,

: $ ./run.sh v1_0.25_128 images/collie.jpg ring 1 4

computes inference on =images/collie.jpg= with the cheapest model
semi-honest honest-majority computation modulo 2^72, special
truncation, and four threads. It should output =guess: 170=, which
corresponds to the ImageNet category "Irish wolfhound".

This computation is also run when building a Docker container using
the provided =Dockerfile=. Simply run the following from this
directory provided that Docker is installed:

: $ docker build .
